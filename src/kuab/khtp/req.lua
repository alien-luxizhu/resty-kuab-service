---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by luxizhu.
--- DateTime: 2021/5/27 13:51
---

local table = table
local require = require
local tostring = tostring
local string = string
local math = math
local os = os
local pairs = pairs
local ipairs = ipairs
local setmetatable = setmetatable

local http = require "resty.http"

local ngx = ngx
local util = require "kuab.util.util"
local Encrypt = util.des.Encrypt

local _M = {}
local g_seqnum = 0

local function makeContext()
    g_seqnum = g_seqnum + 1
    return tostring(g_seqnum)
end

local function MakeAccessToken()
    local a = math.floor(math.random(100, 99999999))
    return string.format("%08d", a)
end

local function GetTimestamp()
    return os.date("%Y-%m-%d %X.99")
end

--- 生成签名
function _M.sign(self)
    local params = self.params
    local keys = {}
    for k in pairs(params) do
        table.insert(keys, k)
    end
    table.sort(keys)
    local t = {}
    for _, key in ipairs(keys) do
        table.insert(t, key)
        table.insert(t, params[key])
    end
    local str = table.concat(t, "")
    params.__Sign = ngx.md5(str)
    return self
end

--- 生成可以发送的body
function _M.encode_args(self)
    self.body = ngx.encode_args(self.params)
    return self
end

--- 添加__Cookie
function _M.set_cookie(self, str)
    local params = self.params
    params.__Cookie = Encrypt(self.strRandomNo, str)
    return self
end

--- 添加参数
function _M.set_params(self, t)
    local params = self.params
    for key, value in pairs(t) do
        if key == "__Cookie" then
            value = Encrypt(self.strRandomNo, value)
        end
        params[key] = value
    end
    return self
end

---@param msg_type string|nil
---@param app_id string
---@param app_secret string
function _M.new(msg_type, app_id, app_secret)
    local strRandomNo = MakeAccessToken()
    local self = {
        params = {
            __MsgType = msg_type,
            __AppID = app_id,
            __SendingTime = GetTimestamp(),
            __RandomNo = MakeAccessToken(),
            __Context = makeContext(),
            __AppSecret = app_secret and Encrypt(strRandomNo, app_secret),
        },
        strRandomNo = strRandomNo,
    }
    return setmetatable(self, { __index = _M })
end

--- 发送http请求
function _M:post(url)
    local httpc = http.new()
    return httpc:request_uri(url, {
        method = "POST",
        body = self:encode_args().body,
        keepalive = true,
    })
end

return _M

