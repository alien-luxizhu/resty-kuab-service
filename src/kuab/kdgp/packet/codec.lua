---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by luxizhu.
--- DateTime: 2021/5/31 15:27
---

local require = require
local string = string
local tonumber = tonumber
local CodecStatus = require "kuab.kdgp.packet.CodecStatus"
local util = require "kuab.util.util"
local std_string = util.std_string
local _M = {}


---@param buffer string
---@return CodecStatus, number @ packet_length
function _M.decode(buffer)
    local buffer_len = string.len(buffer)
    if buffer_len < (4 + 8 + 8) then
        return CodecStatus.CODEC_CONTINUE
    end
    local packet = buffer
    local version = std_string(packet, 0,4)
    if version ~= "KDGP" then
        local err = string.format("不可识别的协议版本: %s", version)
        return CodecStatus.CODEC_FAIL, err
    end

    local head_length_string = std_string(packet, 4, 8)
    local body_length_string = std_string(packet, 4 + 8, 8)

    local head_length = tonumber(head_length_string)
    local body_length = tonumber(body_length_string)

    --print("head_len ", head_length)
    --print("body_len ", body_length)

    if buffer_len < (4 + 8 + 8 + head_length + body_length) then
        return CodecStatus.CODEC_CONTINUE, "CODEC_CONTINUE"
    end

    local head_format = std_string(packet, 4 + 8 + 8 + 8, 4)
    if head_format ~= "KDGB" then
        local err = string.format("不可识别的包头类型: %s", head_format)
        return CodecStatus.CODEC_FAIL, err
    end

    -- CRC校验 ??
    local packet_length = 4 + 8 + 8 + head_length + body_length
    if packet_length > buffer_len then
        return CodecStatus.CODEC_CONTINUE, "CODEC_CONTINUE"
    end

    --print("packet_length = ", packet_length)
    return CodecStatus.CODEC_OK, packet_length
end

return _M
